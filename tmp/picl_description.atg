digit = "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9".
hexdig = digit | "A" | "B" | "C" | "D" | "E" | "F".

ident = letter {letter | digit}.
integer = digit {digit}.


set = "$" hexdig hexdig.
constant = integer | set.


type = "INT" | "SET" | "BOOL".
varDeclaration = type ident {"," ident}.


operator = "+" | "-" | "*".
expression = (ident | constant) [operator | (ident | constant)] | ident "(" [expression] ")".


relation = "=" | "#" | "<" | ">" | "<=" | "=>".
index = integer.
term = ident relation (ident | constant) | ["~"] ident ["." index].
conjunction = term {"&" term}.
disjunction = term {"OR" term}.
condition = conjunction | disjunction | "*".


assignment = ident ":=" expression.
call = ident ["(" expression ")"].
command = "!" ["~"] ident ["." index] | ("INC" | "DEC" | "ROL" | "ROR") ident.
query = "?" ["~"] ident ["." index].

ifStat = "IF" condition "THEN" statSeq {"ELSIF" condition "THEN" statSeq} ["ELSE" statSeq] "END".
whileStat = "WHILE" condition "DO" statSeq {ELSIF condition "DO" statSeq} "END".
repeatStat = "REPEAT" statSeq ("UNTIL" condition | "END").

statment = [assignment | call | command | query | ifStat | whileStat | repeatStat].
statSeq = statment {";" statment}.


formalParameter = type ident.
procedureHeading = "PROCEDURE" ident["(" formalParameter ")"] [":" type].
procedureBody = [{varDeclaration} ";"] ["BEGIN" statSeq] ["RETURN" expression] "END" ident.
procedureDeclaration = procedureHeading ";" procedureBody.

module = "MODULE" ident ";" ["CONST" {ident "=" constant ";"}] [type {ident ["," ident] ";"}] {procedureDeclaration ";"} ["BEGIN" statSeq] "END" ident ".".
